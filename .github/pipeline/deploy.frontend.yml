apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    description: "Greenfield Template"
    tags: "gfp"
    iconClass: icon-js
labels:
  app: ${NAME}-${SUFFIX}
  app.kubernetes.io/part-of: "${NAME}"
parameters:
  - name: NAME
    description: Module name
    value: gfp
  - name: COMPONENT
    description: Component name
    value: frontend
  - name: SUFFIX
    description: Deployment suffix, e.g. pr-### or prod
    required: true
  - name: NAMESPACE
    description: Namespace to deploy to
    value: 32d13a-dev
  - name: DOMAIN
    value: apps.silver.devops.gov.bc.ca
  - name: CPU_REQUEST
    value: 250m
  - name: MEMORY_REQUEST
    value: 1Gi
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${NAME}-${SUFFIX}
      name: ${NAME}-${COMPONENT}-${SUFFIX}
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: pr-${SUFFIX}
          from:
            kind: DockerImage
            name: ghcr.io/bcgov/greenfield-template:pr-frontend-${SUFFIX}
          referencePolicy:
            type: Local
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}-${SUFFIX}
      name: ${NAME}-${COMPONENT}-${SUFFIX}
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        name: ${NAME}-${COMPONENT}-${SUFFIX}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: ${NAME}-${COMPONENT}-${SUFFIX}
        spec:
          containers:
            - image: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${NAME}-${COMPONENT}-${SUFFIX}:pr-${SUFFIX}
              imagePullPolicy: Always
              name: ${NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              readinessProbe:
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                # first probe will fire some time between:
                # initialDelaySeconds and initialDelaySeconds + periodSeconds
                initialDelaySeconds: 30
                periodSeconds: 120
                timeoutSeconds: 1
              livenessProbe:
                successThreshold: 1
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                # first probe will fire some time between:
                # initialDelaySeconds and initialDelaySeconds + periodSeconds
                initialDelaySeconds: 30
                periodSeconds: 120
                timeoutSeconds: 5
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${SUFFIX}
      name: ${NAME}-${COMPONENT}-${SUFFIX}
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 80
          targetPort: 8080
      selector:
        name: ${NAME}-${COMPONENT}-${SUFFIX}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}-${SUFFIX}
      name: ${NAME}-${COMPONENT}-${SUFFIX}
    spec:
      host: ${NAME}-${COMPONENT}-${SUFFIX}.${DOMAIN}
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${NAME}-${COMPONENT}-${SUFFIX}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect

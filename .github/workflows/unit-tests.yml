name: Unit Tests and Analysis

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, converted_to_draft]
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  #TODO: check sonar for OG
  tests-backend:
    name: Backend Unit Tests
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    continue-on-error: true
    runs-on: ubuntu-24.04
    steps:
      - name: Test app
        uses: bcgov/action-test-and-analyse@v1.2.1
        with:
          commands: |
            npm ci
            npm run test:cov
          dir: backend
          node_version: 20
          sonar_args: >
            -Dsonar.exclusions=**/coverage/**,**/examples/**,**/pages/**
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=forest-client-frontend
            -Dsonar.tests=test
          sonar_token: ${{ secrets.SONAR_TOKEN_BACKEND }}

      - name: Report code coverage
        uses: romeovs/lcov-reporter-action@v0.4.0
        with:
          title: Backend coverage report
          delete-old-comments: true
          github-token: ${{ github.token }}
          lcov-file: ./backend/coverage/lcov.info

  trivy:
    name: Repository Report
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.29.0
        with:
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          scan-type: "fs"
          scanners: "vuln,secret,config"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
